{"version":3,"sources":["ToDoContext.js","components/ToDoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Nav.jsx","App.js","index.js"],"names":["ToDoContext","createContext","ToDoProvider","props","useState","content","status","id","todos","setTodos","Provider","value","children","ToDoInout","setStatus","setFilteredTodos","useContext","inputValue","setInputValue","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocal","filter","item","handleFilter","className","onSubmit","event","preventDefault","Swal","fire","icon","title","text","prevTodos","Math","random","position","showConfirmButton","timer","htmlFor","type","placeholder","onChange","target","aria-label","name","ToDoItem","onClick","map","element","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","el","TodoList","filteredTodos","Navbar","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1acc6355.chunk.js","sourcesContent":["import { useState, createContext } from 'react'\n\nexport const ToDoContext = createContext()\n\nexport const ToDoProvider = (props) => {\n  const [todos, setTodos] = useState([\n    {\n      content: 'Here is an example, delete me plz',\n      status: false,\n      id: 1,\n    },\n  ])\n\n  return (\n    <ToDoContext.Provider value={[todos, setTodos]}>\n      {props.children}\n    </ToDoContext.Provider>\n  )\n}\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useState, useEffect } from 'react'\nimport Swal from 'sweetalert2'\nimport { ToDoContext } from '../ToDoContext'\nimport '../styles/ToDoInput.css'\n\nfunction ToDoInout({ setStatus, status, setFilteredTodos }) {\n  const [todos, setTodos] = useContext(ToDoContext)\n  const [inputValue, setInputValue] = useState('')\n\n  const updateInputValue = (event) => {\n    setInputValue(event.target.value)\n  }\n\n  const addTodo = (event) => {\n    event.preventDefault()\n    if (inputValue === '') {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'You must to write something!',\n      })\n    } else {\n      setTodos((prevTodos) => [\n        ...prevTodos,\n        {\n          content: inputValue,\n          status: false,\n          id: Math.random() * 1000,\n        },\n      ])\n      Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: 'Your work has been saved',\n        showConfirmButton: false,\n        timer: 1000\n      })\n      setInputValue('')\n    }\n  }\n\n  const handleSelect = (event) => {\n    setStatus(event.target.value)\n  }\n\n  const handleFilter = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((item) => item.status === true))\n        break\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter((item) => item.status === false))\n        break\n\n      default:\n        setFilteredTodos(todos)\n    }\n  }\n\n  const saveLocal = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }\n\n  const getLocal = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n\n  useEffect(() => {\n    getLocal()\n  }, [])\n\n  useEffect(() => {\n    handleFilter()\n    saveLocal()\n  }, [todos, status])\n  return (\n    <>\n      <div className=\"input__container\">\n        <form onSubmit={addTodo}>\n          <label htmlFor='input' />\n          <i className=\"fas fa-pen pen\"></i>\n          <input\n            id='input'\n            value={inputValue}\n            type=\"text\"\n            placeholder='Plan?'\n            onChange={updateInputValue}\n          />\n\n          <button className='input__button' aria-label=\"Submit to do element\">\n            <i className=\"fas fa-plus\"></i>\n          </button>\n        </form>\n\n        <select onChange={handleSelect} name=\"To Do Filter\" className='filter__todo'>\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </>\n  )\n}\n\nexport default ToDoInout","import { useContext } from 'react'\nimport { ToDoContext } from '../ToDoContext'\nimport Swal from 'sweetalert2'\nimport '../styles/ToDoItem.css'\n\nfunction ToDoItem({ item }) {\n\n  const [todos, setTodos] = useContext(ToDoContext)\n\n  const handleCompleted = () => {\n    setTodos(todos.map((element) => {\n      if (element.id === item.id) {\n        return {\n          ...element,\n          status: !element.status\n        }\n      } else {\n        return element\n      }\n    }))\n  }\n\n  const deleteTodoItem = () => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: 'rgba(90, 241, 136, 0.842)',\n      cancelButtonColor: '#ff4e6e',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setTodos(todos.filter((el) => el.id !== item.id))\n        Swal.fire(\n          'Deleted!',\n          'Your file has been deleted.',\n          'success'\n        )\n      }\n    })\n  }\n\n  return (\n    <div className={item.status ? 'item__completed' : 'todo__item'}>\n\n      <div className=\"content\">\n        <p>{item.content}</p>\n      </div>\n\n      <div className=\"options\">\n        <button\n          className={item.status ? 'done' : 'undone'}\n          type='button'\n          onClick={handleCompleted}\n          aria-label=\"Complete to do elemet\"\n        >\n          <i className='fas fa-check-circle'></i>\n\n        </button>\n        <button\n          className={item.status ? 'trashDone' : 'trash'}\n          type='button'\n          onClick={deleteTodoItem}\n          aria-label=\"Delete to do element\"\n        ><i className=\"fas fa-trash-alt\"></i></button>\n\n      </div>\n    </div >\n  )\n}\n\nexport default ToDoItem","import ToDoItem from './TodoItem'\nimport '../styles/ToDoList.css'\n\nfunction TodoList({ filteredTodos }) {\n\n  return (\n    <div className='todo__list'>\n      {filteredTodos.map(item => (\n        <ToDoItem\n          item={item}\n          key={item.id}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default TodoList","import { useContext } from 'react'\nimport { ToDoContext } from '../ToDoContext'\nimport '../styles/Nav.css'\n\nfunction Navbar() {\n  const [todos,] = useContext(ToDoContext)\n  return (\n    <header>\n      <nav>\n        <div className=\"logo\">\n          whoIsBeto To Do List\n        </div>\n\n        <div className=\"todos__number\">\n          <span>\n            You have:\n            {' '}\n            {todos.length}\n            {' '}\n            to dos\n            </span>\n        </div>\n      </nav>\n    </header>\n  )\n}\n\nexport default Navbar","import { useState } from 'react'\nimport ToDoInput from './components/ToDoInput'\nimport TodoList from './components/TodoList'\nimport { ToDoProvider } from './ToDoContext'\nimport Navbar from './components/Nav'\nimport './App.css';\n\n\nfunction App() {\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  return (\n    <ToDoProvider>\n      <Navbar />\n      <div className=\"wrapper\">\n        <ToDoInput\n          setStatus={setStatus}\n          status={status}\n          filteredTodos={filteredTodos}\n          setFilteredTodos={setFilteredTodos}\n        />\n        <TodoList filteredTodos={filteredTodos} />\n      </div>\n    </ToDoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}