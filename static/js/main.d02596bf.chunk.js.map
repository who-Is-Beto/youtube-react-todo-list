{"version":3,"sources":["ToDoContext.js","components/ToDoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","index.js"],"names":["ToDoContext","createContext","ToDoProvider","props","useState","content","status","id","todos","setTodos","Provider","value","children","ToDoInout","setStatus","setFilteredTodos","useContext","inputValue","setInputValue","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocal","filter","item","handleFilter","className","onSubmit","event","preventDefault","alert","prevTodos","Math","random","type","placeholder","onChange","target","onClick","aria-label","name","ToDoItem","map","element","el","TodoList","filteredTodos","App","ReactDOM","render","document","getElementById"],"mappings":"yRAEaA,EAAcC,0BAEdC,EAAe,SAACC,GAAW,IAAD,EACXC,mBAAS,CACjC,CACEC,QAAS,oCACTC,QAAQ,EACRC,GAAI,KAL6B,mBAC9BC,EAD8B,KACvBC,EADuB,KASrC,OACE,cAACT,EAAYU,SAAb,CAAsBC,MAAO,CAACH,EAAOC,GAArC,SACGN,EAAMS,Y,MC+FEC,MAzGf,YAA6D,IAAxCC,EAAuC,EAAvCA,UAAWR,EAA4B,EAA5BA,OAAQS,EAAoB,EAApBA,iBAAoB,EAChCC,qBAAWhB,GADqB,mBACnDQ,EADmD,KAC5CC,EAD4C,OAEtBL,mBAAS,IAFa,mBAEnDa,EAFmD,KAEvCC,EAFuC,KAqE1D,OARAC,qBAAU,YAbO,WACf,GAAsC,OAAlCC,aAAaC,QAAQ,SACvBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIC,EAAYF,KAAKG,MAAMN,aAAaC,QAAQ,UAChDZ,EAASgB,IASXE,KACC,IAEHR,qBAAU,YApCW,WACnB,OAAQb,GACN,IAAK,YACHS,EAAiBP,EAAMoB,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKvB,WAC7C,MAEF,IAAK,cACHS,EAAiBP,EAAMoB,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKvB,WAC7C,MAEF,QACES,EAAiBP,IA0BrBsB,GArBAV,aAAaE,QAAQ,QAASC,KAAKC,UAAUhB,MAuB5C,CAACA,EAAOF,IAET,mCACE,sBAAKyB,UAAU,mBAAf,UACE,uBAAMC,SAhEI,SAACC,GACfA,EAAMC,iBACa,KAAfjB,EACFkB,MAAM,gDAEN1B,GAAS,SAAC2B,GAAD,4BACJA,GADI,CAEP,CACE/B,QAASY,EACTX,QAAQ,EACRC,GAAoB,IAAhB8B,KAAKC,eAGbpB,EAAc,MAmDZ,UACE,kCACE,mBAAGa,UAAU,mBACb,uBACEpB,MAAOM,EACPsB,KAAK,OACLC,YAAY,QACZC,SA3Ea,SAACR,GACxBf,EAAce,EAAMS,OAAO/B,UA4ElBM,GACC,wBACE0B,QA1BmB,WAC/BzB,EAAc,KA0BFa,UAAU,uBACVa,aAAW,2BAHb,kBAQJ,wBAAQb,UAAU,gBAAgBa,aAAW,uBAA7C,SACE,mBAAGb,UAAU,qBAIjB,yBAAQU,SAtEO,SAACR,GACpBnB,EAAUmB,EAAMS,OAAO/B,QAqEakC,KAAK,eAAed,UAAU,eAA9D,UACE,wBAAQpB,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,aCjDKmC,MAlDf,YAA6B,IAATjB,EAAQ,EAARA,KAAQ,EAEAb,qBAAWhB,GAFX,mBAEnBQ,EAFmB,KAEZC,EAFY,KAqB1B,OACE,sBAAKsB,UAAWF,EAAKvB,OAAS,kBAAoB,aAAlD,UAEE,qBAAKyB,UAAU,UAAf,SACE,4BAAIF,EAAKxB,YAGX,sBAAK0B,UAAU,UAAf,UACE,wBACEA,UAAWF,EAAKvB,OAAS,OAAS,SAClCiC,KAAK,SACLI,QA5BgB,WACtBlC,EAASD,EAAMuC,KAAI,SAACC,GAClB,OAAIA,EAAQzC,KAAOsB,EAAKtB,GACf,2BACFyC,GADL,IAEE1C,QAAS0C,EAAQ1C,SAGZ0C,OAqBLJ,aAAW,wBAJb,SAME,mBAAGb,UAAU,0BAGf,wBACEA,UAAWF,EAAKvB,OAAS,YAAc,QACvCiC,KAAK,SACLI,QAxBe,WACrBlC,EAASD,EAAMoB,QAAO,SAACqB,GAAD,OAAQA,EAAG1C,KAAOsB,EAAKtB,QAwBvCqC,aAAW,uBAJb,SAKC,mBAAGb,UAAU,8B,MC9BPmB,MAdf,YAAsC,IAAlBC,EAAiB,EAAjBA,cAElB,OACE,qBAAKpB,UAAU,aAAf,SACGoB,EAAcJ,KAAI,SAAAlB,GAAI,OACrB,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKtB,UCgBL6C,MAnBf,WAAgB,IAAD,EACehD,mBAAS,OADxB,mBACNE,EADM,KACEQ,EADF,OAE6BV,mBAAS,IAFtC,mBAEN+C,EAFM,KAESpC,EAFT,KAIb,OACE,cAAC,EAAD,UACE,sBAAKgB,UAAU,UAAf,UACE,cAAC,EAAD,CACEjB,UAAWA,EACXR,OAAQA,EACR6C,cAAeA,EACfpC,iBAAkBA,IAEpB,cAAC,EAAD,CAAUoC,cAAeA,UCfjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d02596bf.chunk.js","sourcesContent":["import { useState, createContext } from 'react'\r\n\r\nexport const ToDoContext = createContext()\r\n\r\nexport const ToDoProvider = (props) => {\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      content: 'Here is an example, delete me plz',\r\n      status: false,\r\n      id: 1,\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <ToDoContext.Provider value={[todos, setTodos]}>\r\n      {props.children}\r\n    </ToDoContext.Provider>\r\n  )\r\n}\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport { ToDoContext } from '../ToDoContext'\r\nimport '../styles/ToDoInput.css'\r\n\r\nfunction ToDoInout({ setStatus, status, setFilteredTodos }) {\r\n  const [todos, setTodos] = useContext(ToDoContext)\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const updateInputValue = (event) => {\r\n    setInputValue(event.target.value)\r\n  }\r\n\r\n  const addTodo = (event) => {\r\n    event.preventDefault()\r\n    if (inputValue === '') {\r\n      alert('You most to write something in the input D:')\r\n    } else {\r\n      setTodos((prevTodos) => [\r\n        ...prevTodos,\r\n        {\r\n          content: inputValue,\r\n          status: false,\r\n          id: Math.random() * 1000,\r\n        },\r\n      ])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  const handleSelect = (event) => {\r\n    setStatus(event.target.value)\r\n  }\r\n\r\n  const handleFilter = () => {\r\n    switch (status) {\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter((item) => item.status === true))\r\n        break\r\n\r\n      case 'uncompleted':\r\n        setFilteredTodos(todos.filter((item) => item.status === false))\r\n        break\r\n\r\n      default:\r\n        setFilteredTodos(todos)\r\n    }\r\n  }\r\n\r\n  const saveLocal = () => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }\r\n\r\n  const getLocal = () => {\r\n    if (localStorage.getItem('todos') === null) {\r\n      localStorage.setItem('todos', JSON.stringify([]))\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\r\n      setTodos(todoLocal)\r\n    }\r\n  }\r\n\r\n  const handleDeleteInputContent = () => {\r\n    setInputValue('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLocal()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    handleFilter()\r\n    saveLocal()\r\n  }, [todos, status])\r\n  return (\r\n    <>\r\n      <div className=\"input__container\">\r\n        <form onSubmit={addTodo}>\r\n          <label>\r\n            <i className=\"fas fa-pen pen\"></i>\r\n            <input\r\n              value={inputValue}\r\n              type=\"text\"\r\n              placeholder='Plan?'\r\n              onChange={updateInputValue}\r\n            />\r\n            {inputValue &&\r\n              <button\r\n                onClick={handleDeleteInputContent}\r\n                className='delete__input-button'\r\n                aria-label='Delete the input content'>x</button>\r\n            }\r\n          </label>\r\n\r\n\r\n          <button className='input__button' aria-label=\"Submit to do element\">\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </form>\r\n\r\n        <select onChange={handleSelect} name=\"To Do Filter\" className='filter__todo'>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToDoInout","import { useContext } from 'react'\r\nimport { ToDoContext } from '../ToDoContext'\r\nimport '../styles/ToDoItem.css'\r\n\r\nfunction ToDoItem({ item }) {\r\n\r\n  const [todos, setTodos] = useContext(ToDoContext)\r\n\r\n  const handleCompleted = () => {\r\n    setTodos(todos.map((element) => {\r\n      if (element.id === item.id) {\r\n        return {\r\n          ...element,\r\n          status: !element.status\r\n        }\r\n      } else {\r\n        return element\r\n      }\r\n    }))\r\n  }\r\n\r\n  const deleteTodoItem = () => {\r\n    setTodos(todos.filter((el) => el.id !== item.id))\r\n  }\r\n\r\n  return (\r\n    <div className={item.status ? 'item__completed' : 'todo__item'}>\r\n\r\n      <div className=\"content\">\r\n        <p>{item.content}</p>\r\n      </div>\r\n\r\n      <div className=\"options\">\r\n        <button\r\n          className={item.status ? 'done' : 'undone'}\r\n          type='button'\r\n          onClick={handleCompleted}\r\n          aria-label=\"Complete to do elemet\"\r\n        >\r\n          <i className='fas fa-check-circle'></i>\r\n\r\n        </button>\r\n        <button\r\n          className={item.status ? 'trashDone' : 'trash'}\r\n          type='button'\r\n          onClick={deleteTodoItem}\r\n          aria-label=\"Delete to do element\"\r\n        ><i className=\"fas fa-trash-alt\"></i></button>\r\n\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ToDoItem","import ToDoItem from './TodoItem'\r\nimport '../styles/ToDoList.css'\r\n\r\nfunction TodoList({ filteredTodos }) {\r\n\r\n  return (\r\n    <div className='todo__list'>\r\n      {filteredTodos.map(item => (\r\n        <ToDoItem\r\n          item={item}\r\n          key={item.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","import { useState } from 'react'\nimport './App.css';\nimport ToDoInput from './components/ToDoInput'\nimport TodoList from './components/TodoList'\nimport { ToDoProvider } from './ToDoContext'\n\n\nfunction App() {\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  return (\n    <ToDoProvider>\n      <div className=\"wrapper\">\n        <ToDoInput\n          setStatus={setStatus}\n          status={status}\n          filteredTodos={filteredTodos}\n          setFilteredTodos={setFilteredTodos}\n        />\n        <TodoList filteredTodos={filteredTodos} />\n      </div>\n    </ToDoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}